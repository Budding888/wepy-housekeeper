<style lang="less">
.container {
  background-color: #F2f2f2;
  min-height: 100%;
}
.view-container{
  width: 750rpx;
  position: relative;  
}
.swiper_box {
  width: 100%;
  height:400rpx;
}

swiper-item image {
  width: 100%;
  display: inline-block;
  overflow: hidden;
  height:400rpx;
}
.swiper-container .dots{  
  position: absolute;  
  left: 0;  
  right: 0;  
  bottom: 20rpx;  
  display: flex;  
  justify-content: center;  
}  
.swiper-container .dots .dot{  
  margin: 0 8rpx;  
  width: 14rpx;  
  height: 14rpx;  
  background: #fff;  
  border-radius: 50%;  
  transition: all .6s;  
  opacity: .5;
}  
.swiper-container .dots .dot.active{  
  width: 14rpx;  
  opacity: 1;
}


.important-container {
    display: flex;
    height: 260rpx;
    font-size: 28rpx;
}

.important-info {
    flex: 1;
    padding: 20rpx;
    color: #333;
}

.run-data {
    background:#999;
    border-radius:5px;
    padding:5px;
    color:#fff;
}

.weather {
    width: 300rpx;
}

.tool-container {
    display: flex;
}

.title {
    width: 100%;
    text-align: left;
    font-size: 34rpx;
    padding-left: 20rpx;
    line-height:90rpx;
}

.tool {
    width: 200rpx;
    display: flex;
    justify-content: center;
    text-align:center;
    padding: 20rpx;
    image {
        height: 160rpx;
        width: 160rpx;
        border-radius: 30rpx;
    }
    .text {
        font-size: 30rpx;
    }
}

.curTemperature{
    color:#fff;
    font-size: 0.8em;
    flex-grow: 1;/*表示将剩余的空间分配给它*/
}
 
.tmp{
    font-size: 5em;
}


</style>

<template>
    <view class="container">
        <view class="view-container swiper-container">
            <swiper
                class="swiper_box" 
                autoplay="{{autoplay}}"
                interval="{{interval}}"
                duration="{{duration}}"
                @change="swiperchange"
            >
                <repeat for="{{banners}}" key="fileID">
                    <swiper-item>
                        <image
                            src="{{item.tempFileURL}}"
                            class="slide-image"
                            width="750rpx"
                            height="400rpx"
                        />
                    </swiper-item>
                </repeat>
            </swiper>
            <view class="dots">  
                <repeat for="{{banners}}" key="fileID">  
                    <view class="dot{{index == swiperCurrent ? ' active' : ''}}"></view>  
                </repeat>  
            </view>  
        </view>
        <view class="view-container">
            <text class="title">重要的事</text>
            <view class="important-container">
                <view class="important-info">
                    <text class="run-data">今日运动总步数： {{lastDayStep}}</text>
                </view>
                <view class="weather">
                    <view class="city">{{city}}  {{district}}</view>
                    <view class="street">{{street}}</view>
                    <view class="tmp">{{weather.tmp}}°</view>
                    <view class="type">{{weather.cond.txt}} | 空气 {{weatherQuality.city.qlty}}</view>
                </view>         
            </view>
        </view>
        <view class="view-container">
            <text class="title">我的工具</text>
            <scroll-view scroll-x> 
                <view class="tool-container">
                    <repeat for="{{tools}}">
                        <navigator class="tool" url="{{item.link}}" >
                            <view>
                                <image src="{{item.img}}" />
                                <view class="text">{{item.text}}</view>
                            </view>
                        </navigator>
                    </repeat> 
                </view>
            </scroll-view> 
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import { connect } from 'wepy-redux';
    import {getWeather, getOpenId} from '../store/actions';
    import Panel from '@/components/panel' // alias example
    import Counter from 'counter' // alias example
    import List from '../components/list' // aliasFields example
    import moduleA from 'module-a' // aliasFields ignore module example
    import Group from '../components/group'
    import Toast from 'wepy-com-toast'
    import testMixin from '../mixins/test'
    const AppId = 'wxf6c91f679a67b89c';
    const AppSecret = 'a107443e768b171ae894d0a774daea32';

    // redux
    @connect({
        weather(state) {
            return state.weather.weather;
        },
        weatherQuality(state) {
            return state.weather.weatherQuality;
        }
    },
    {
        getWeather,
        getOpenId
    })
    // 使用state   xxx
    // 使用action  this.methods.xxx()

export default class Index extends wepy.page {

    config = {
      navigationBarTitleText: '个人生活管家'
    };

    // 可用于页面模板绑定的数据
    data = {
        autoplay: true,
        interval: 3000,
        duration: 1000,
        swiperCurrent: 0,

        banners: [],
        tools: [{
            id: '1',
            link: './diary',
            img: './images/happy.png',
            text: '日记本'
        },
        {
            id: '2',
            link: '',
            img: './images/run.png',
            text: 'Todo'
        },
        {
            id: '3',
            link: './camera',
            img: './images/knl.png',
            text: '直播'
        },
        {
            id: '4',
            link: '',
            img: './images/word.png',
            text: '纪念日'
        },
        {
            id: '5',
            link: '',
            img: './images/knl.png',
            text: '手账' 
        }],

        lastDayStep: 0,
        city: '',
        district: '',
        street: ''
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
        swiperchange(e) {
            this.swiperCurrent = e.detail.current;
            this.$apply();
        }
    };

    onLoad() {
        wx.cloud.init();
        this.getBanner();
        this.getRunData();
        this.getLocation();
    }

    async getBanner() {
        let result = await wepy.request(this.$parent.globalData.apiHost + '/banner/list');
        let urls =  await wx.cloud.getTempFileURL({
            fileList: result.data.data
        });
        this.banners = urls.fileList;
        // 在异步函数中更新数据的时候，必须手动调用$apply方法，才会触发脏数据检查流程的运行
        this.$apply();
    }

    /**
     * 获取微信运动步数
    */
    async getRunData() {
        let result = await wepy.getWeRunData();
        this.decodeUserInfo(result);
    }

    decodeUserInfo(data) {
        // 发起网络请求
        const userInfo = this.$parent.globalData.userInfo;
        wepy.request({
            url: 'https://api.weixin.qq.com/sns/jscode2session',
            data:{
                appid: AppId,
                secret: AppSecret,
                js_code: userInfo && userInfo.code,
                grant_type: 'authorization_code'
            },
            header: {  
                "Content-Type": "application/x-www-form-urlencoded"
            }, 
            method: 'GET'
        })
        .then(res => {
            this.methods.getOpenId(res.data.openid);
            return wx.cloud.callFunction({
                // 云函数名称
                name: 'getRunData',
                // 传给云函数的参数
                data: {
                    encryptedData: data.encryptedData,
                    iv: data.iv,
                    session_key: res.data.session_key
                }
            });
        })
        .then(res => {
            const stepList = res.result.stepInfoList;
            const last = stepList[stepList.length - 1];
            this.lastDayStep = last.step;
            this.$apply();
        })
        .catch(console.error);
    }

    // 获取位置
    async getLocation() {
        const res = await wepy.getLocation();
        const latitude = res.latitude;//纬度
        const longitude = res.longitude;//经度
        console.log(latitude + "----" + longitude);
        this.getCity(latitude, longitude);//调用自己写的函数获得城市
    }
    //获得城市的函数定义
    async getCity(lat, lng) {
        const url = "https://api.map.baidu.com/geocoder/v2/";
        //发出请求获取数据
        const res = await wepy.request(`${url}?location=${lat + "," + lng}&output=json&ak=MKABLw7PZssnQPy0BmnV2e6vcUyKWZxf`);
        console.log(res);
        const address = res.data.result.addressComponent;

        this.city = address.city;
        this.district = address.district;
        this.street = address.street;

        //调用自定义的函数获取天气信息
        let city = address.city;
        city = city.substring(0, city.length - 1);//截掉最后一个字"市"
        this.methods.getWeather(city);

    }



}


</script>
