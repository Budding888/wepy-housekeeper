     
<style lang="less">
@import "../common/weui.wxss";

.page-section{
  width: auto;
  margin: 30rpx;
  padding: 64rpx 30rpx;
  background-color: #fff;
  text-align: center;
  font-size: 28rpx;
}
.desc{
  color: #B2B2B2;
}
.price{
  margin-top: 30rpx;
  margin-bottom: 25rpx;
  position: relative;
  display: inline-block;
  font-size: 78rpx;
  line-height: 1;
}
.price:before{
  content: "¥";
  position: absolute;
  font-size: 40rpx;
  top: 8rpx;
  left: -40rpx;
}

</style>

<template>
    <view class="container">
        <view class="page-section">
            <view>支付金额</view>
            <view class="price">0.01</view>
            <view class="desc">实际接口应用中可自定义金额</view>
            <view class="btn-area">
                <button type="primary" @tap="requestPayment" loading="{{loading}}">支付</button>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import { connect } from 'wepy-redux';

    @connect({
        openid(state) {
            return state.user.openid;
        }
    })

    export default class Payment extends wepy.page {

        config = {
            navigationBarTitleText: '支付'
        };

        // 可用于页面模板绑定的数据
        data = {
            loading: false
        };

        // 事件处理函数(集中保存在methods对象中)
        methods = {
            
            async requestPayment() {
                const host = '14592619.qcloud.la';
                const paymentUrl = `https://${host}/payment`;

                this.loading = true;
                const res = await wepy.request({
                    url: paymentUrl,
                    data: {
                        openid: this.openid
                    },
                    method: 'POST'
                });
                console.log('unified order success, response is:', res)
                const payargs = res.data.payargs;
                wepy.requestPayment({
                    timeStamp: payargs.timeStamp,
                    nonceStr: payargs.nonceStr,
                    package: payargs.package,
                    signType: payargs.signType,
                    paySign: payargs.paySign
                });
                this.loading = false;
            }
        };

    }


</script>
  
     
